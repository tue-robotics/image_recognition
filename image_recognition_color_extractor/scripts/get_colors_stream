#!/usr/bin/env python
import argparse

import rospy

from sensor_msgs.msg import Image

from image_recognition_msgs.srv import Recognize

class ExtractColorClient(object):
    def __init__(self, image_topic, color_service):
        self.image_sub = rospy.Subscriber(image_topic, Image, self.color_callback)
        self.color_proxy = rospy.ServiceProxy(color_service, Recognize)
        self.color_proxy.wait_for_service(timeout=20)

    def color_callback(self, msg):
        # Simply print out values in our custom message.
        colors = self.color_proxy(msg)
        rospy.loginfo(colors)

if __name__ == '__main__':

    parser = argparse.ArgumentParser(description='Get dominant colors from image')
    parser.add_argument('--topic', default='/image', type=str, help='Topic')
    args = parser.parse_args()

    rospy.init_node('color_extractor_stream')

    extract_color_client = ExtractColorClient(args.topic, 'extract_color')

    rospy.spin()
