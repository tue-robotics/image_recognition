#!/usr/bin/env python

import argparse
import logging
import os
import sys

import cv2
import yolo_wrapper

from image_recognition_openpose import OpenposeWrapper

parser = argparse.ArgumentParser(description='Detect poses in an image',
                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument('--model_folder', help='Path where the models are stored',
                    default=os.path.expanduser('~/src/openpose/models'))
parser.add_argument('--pose_model', help='What pose model to use', default="BODY_25")
parser.add_argument('--net_input_size', help='Net input size', default="-1x64")
parser.add_argument('--net_output_size', help='Net output size', default="-1x-1")
parser.add_argument('--num_scales', type=int, help='Num scales', default=1)
parser.add_argument('--scale_gap', type=float, help='Scale gap', default=0.3)
parser.add_argument('--num_gpu_start', type=int, help='What GPU support', default=0)
parser.add_argument('--overlay_alpha', type=float, help='Overlay alpha for the output image', default=0.6)
parser.add_argument('--python_path', help='Python path where Openpose is stored', default='/usr/local/python/')

mode_parser = parser.add_subparsers(help='Mode')
image_parser = mode_parser.add_parser('image', help='Use image mode')
image_parser.set_defaults(mode='image')
cam_parser = mode_parser.add_parser('cam', help='Use cam mode')
cam_parser.set_defaults(mode='cam')

# Image specific arguments
image_parser.add_argument('image', help='Input image')

args = parser.parse_args()

logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)

yolo = yolo_wrapper.Yolo_wrapper()

if args.mode == 'image':
    # Read the image
    #image = cv2.imread(args.image)
    prediction = yolo.pose_yolo_detect_poses(args.image)
    #logging.info(recognitions)
    #cv2.imshow("overlayed_image", overlayed_image)
    cv2.waitKey()

elif args.mode == 'cam':
    # classNames can be deleted if we need only pose estimation and not object detection
    classNames = ["person", "bicycle", "car", "motorbike", "aeroplane", "bus", "train", "truck", "boat",
              "traffic light", "fire hydrant", "stop sign", "parking meter", "bench", "bird", "cat",
              "dog", "horse", "sheep", "cow", "elephant", "bear", "zebra", "giraffe", "backpack", "umbrella",
              "handbag", "tie", "suitcase", "frisbee", "skis", "snowboard", "sports ball", "kite", "baseball bat",
              "baseball glove", "skateboard", "surfboard", "tennis racket", "bottle", "wine glass", "cup",
              "fork", "knife", "spoon", "bowl", "banana", "apple", "sandwich", "orange", "broccoli",
              "carrot", "hot dog", "pizza", "donut", "cake", "chair", "sofa", "pottedplant", "bed",
              "diningtable", "toilet", "tvmonitor", "laptop", "mouse", "remote", "keyboard", "cell phone",
              "microwave", "oven", "toaster", "sink", "refrigerator", "book", "clock", "vase", "scissors",
              "teddy bear", "hair drier", "toothbrush"
              ]
    prediction = yolo.stream_yolo_detect_poses(classNames)

